name: CI/CD

on:
  push:
    branches:
      - develop
    tags:
      - v*
      
  pull_request:
    branches:
      - develop 

env:
  IMAGE_NAME: demo-ksdfjsslfkja
  TEST_DATABASE_NAME: tests
  
jobs:
  ci:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: $TEST_DATABASE_NAME
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin' #TODO
          cache: 'maven'

      - name: Configure the application.properties file
        run: |
          echo "spring.datasource.url=jdbc:mysql://localhost:3306/${{ env.TEST_DATABASE_NAME }}
          spring.datasource.username=root
          spring.datasource.password=
          spring.jpa.hibernate.ddl-auto=update" >"./src/main/resources/application.properties"
      - name: Build and test with Maven
        run: mvn -B package --file pom.xml
        
  cd:
    if: github.event_name != 'pull_request'
  
    runs-on: ubuntu-latest
    needs: ci
    
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v3

      - name: build jar file
        run: mvn clean install -DskipTests

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          
          # Use Docker `dev` tag
          [ "$VERSION" == "develop" ] && VERSION=dev
          
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: 'just-a-placeholder-so-we-dont-get-errors'

      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Update docker compose
        run: rsync -avz ./docker-compose.yml ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/

      - name: Build the stack 
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} -i ~/.ssh/id_rsa \
          "sudo docker-compose pull; \
          sudo docker-compose up --force-recreate --build -d; \
          sudo docker image prune -f"
