name: Build and Deploy Docker Image to Azure

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

env:
  AZURE_WEB_APP: 'kino2022.westeurope.cloudapp.azure.com'
  DOCKER_IMAGE_NAME: 'kino2022'

jobs:

  build-and-deploy-docker-image:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build jar file
        run: mvn clean install

      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag '${{env.DOCKER_IMAGE_NAME}}':latest

     # - name: Docker Login
      #  run: docker login ghcr.io --username '${{secrets.DOCKER_LOGIN}}' --password '${{secrets.DOCKER_PASSWORD}}'

      - name: Tag the Docker image
        run: docker tag '${{env.DOCKER_IMAGE_NAME}}':latest 'mathiasreker'/'${{env.DOCKER_IMAGE_NAME}}':latest #${{secrets.DOCKER_LOGIN}}

      - name: Log into GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image to GitHub Container Registry
        run: |
          IMAGE_ID=ghcr.io/mathiasreker/${{env.DOCKER_IMAGE_NAME}}:latest        
          docker push $IMAGE_ID
 #${{ github.repository_owner }}
 
      #- name: Azure Login
      #  uses: azure/login@v1
      #  with:
      #    creds: ${{ secrets.AZURE_CREDENTIALS }}

     # - name: Azure WebApp Deployment
     #   uses: Azure/webapps-deploy@v2
     #   with: # Name of the Azure Web App
     #     app-name: '${{env.AZURE_WEB_APP}}'
     #     # Applies to Web App Containers only: Specify the fully qualified container image(s) name. For example, 'myregistry.azurecr.io/nginx:latest' or 'python:3.7.2-alpine/'. For multi-container scenario multiple container image names can be provided (multi-line separated)
     #     images: '${{secrets.DOCKER_LOGIN}}/${{env.DOCKER_IMAGE_NAME}}:latest'
